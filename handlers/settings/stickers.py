
from aiogram import types, Router
from aiogram.filters import Command


from sqlalchemy.orm import Session

from filters import filters
from configurator import config
from db import utils
from db.models.blackliststickers import BlackListStickers
from db.models.settings import Settings,Punish, PunishTime,punishmemt_
from db.models.chat import Chat

from dispatcher import bot

router=Router()
@router.message(Command('sticker'))
async def sticker_handler(message: types.Message, session: Session):
    chat: Chat = session.query(Chat).get(message.chat.id)

    if chat.permission:
        user = await bot.get_chat_member(message.chat.id, message.from_user.id)
        if user.status == "creator":
            arg = message.text.split()[1:] if not config.bot.bot_name.lower() in message.text.split()[
                0].lower() else message.text.split()[2:]

            if len(arg) ==0:
                settings: Settings = session.query(Settings).get(message.chat.id)

                if settings.sticker:
                    settings.sticker = False
                    await message.reply('‚ùå BlackList [STICKER] –í—ã–∫–ª—é—á–µ–Ω!')

                else:
                    settings.sticker = True
                    await message.reply('‚úÖ BlackList [STICKER] –í–∫–ª—é—á–µ–Ω!')
                session.commit()
            elif arg[0].lower() in ['mode', '–º–æ–¥']:
                try:
                    i = punishmemt_[arg[1].lower()]
                except KeyError:
                    return await message.reply('‚ùå')
                punish: Punish = session.query(Punish).get(message.chat.id)

                if i == 1:
                    punish.stick = 'kick'
                    await message.reply('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ <b>–ö–ò–ö!</b>')
                elif i == 2:
                    punish.stick = 'mute'
                    await message.reply('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ <b>–ú–£–¢!</b>')
                elif i == 3:
                    punish.stick = 'ban'
                    await message.reply('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ <b>–ë–ê–ù!</b>')
                else:
                    return await message.reply('‚ùå')
                session.commit()
            elif arg[0].lower() in ['time', '–≤—Ä–µ–º—è']:
                try:
                    restriction_time = utils.get_restriction_time(arg[1])
                except :
                    return await message.reply('‚ùå')

                punishtime: PunishTime = session.query(PunishTime).get(message.chat.id)
                punishtime.time_stick = restriction_time
                session.commit()
                return await message.reply(f'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è <b>{arg[1]}</b>!')


@router.message(Command('ban_pack'), filters.IsCreaterFilter())
async def add_ban_sticker(message: types.Message, session: Session):
    chat: Chat = session.query(Chat).get(message.chat.id)

    if chat.permission == False:
        return
    if message.reply_to_message:
        if not message.reply_to_message.sticker:
            return await message.reply("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å—Ç–∏–∫–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–µ!.")
        sticker_pack_id = message.reply_to_message.sticker.file_unique_id
        if not sticker_pack_id:
            await message.reply("‚ùå –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —ç—Ç–æ —Å—Ç–∏–∫–µ—Ä .")
            return
        BANNED_STICKERS: BlackListStickers = session.query(BlackListStickers).get(sticker_pack_id)

        if BANNED_STICKERS is not None:
            return message.reply("‚ùå –î–∞–Ω–Ω—ã–π –°—Ç–∏–∫–µ—Ä –ø–∞–∫ —É–∂–µ –≤–Ω–µ—Å–µ–Ω –≤ —á—Å! .")
        # Record the sticker pack id in the file
        res = BlackListStickers(message.chat.id, sticker_pack_id)
        session.add(res)
        session.commit()

        await bot.delete_message(message.chat.id, message.reply_to_message.message_id)
        await message.reply("ü•≥ –°—Ç–∏–∫–µ—Ä –ø–∞–∫ {} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.".format(sticker_pack_id))
    else:
        await message.reply("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å—Ç–∏–∫–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–µ!.")
        return

@router.message(Command('unban_pack'), filters.IsCreaterFilter())
async def add_ban_sticker(message: types.Message, session: Session):
    chat: Chat = session.query(Chat).get(message.chat.id)

    if chat.permission == False:
        return
    if message.reply_to_message:
        if not message.reply_to_message.sticker:
            return await message.reply("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å—Ç–∏–∫–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–µ!.")
        sticker_pack_id = message.reply_to_message.sticker.file_unique_id
        if not sticker_pack_id:
            await message.reply("‚ùå –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —ç—Ç–æ —Å—Ç–∏–∫–µ—Ä .")
            return
        BANNED_STICKERS: BlackListStickers = session.query(BlackListStickers).get(sticker_pack_id)
        if BANNED_STICKERS is None:
            return message.reply("‚ùå –î–∞–Ω–Ω–æ–≥–æ –°—Ç–∏–∫–µ—Ä –ø–∞–∫–∞ –Ω–µ—Ç—É –≤ —á—Å! .")
        # Record the sticker pack id in the file
        session.delete(BANNED_STICKERS)
        session.commit()

        await message.reply("ü•≥ –°—Ç–∏–∫–µ—Ä –ø–∞–∫ {} –±—ã–ª –≤—ã–Ω–µ—Å–µ–Ω –∏–∑ —á—Å.".format(sticker_pack_id))
    else:
        await message.reply("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å—Ç–∏–∫–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–µ!.")
        return
